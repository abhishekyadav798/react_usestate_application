{"ast":null,"code":"var _jsxFileName = \"D:\\\\abc\\\\hooks\\\\src\\\\HookCounter1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookCounter1() {\n  _s();\n\n  const initialCount = 0;\n  const [count, setCount] = useState(initialCount);\n\n  const incrementFive = () => {\n    for (let i = 0; i < 5; i++) {\n      setCount(prevCount = prevCount + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Count:\", count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(initialCount),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementFive,\n      children: \"five\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HookCounter1, \"iVx0R47PkZMcYAYB+nKv8FsQHUg=\");\n\n_c = HookCounter1;\nexport default HookCounter1;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookCounter1\");","map":{"version":3,"sources":["D:/abc/hooks/src/HookCounter1.js"],"names":["React","useState","HookCounter1","initialCount","count","setCount","incrementFive","i","prevCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAMC,YAAY,GAAG,CAArB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBJ,QAAQ,CAACE,YAAD,CAAhC;;AAEA,QAAMG,aAAa,GAAG,MAAI;AACtB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAqB;AACjBF,MAAAA,QAAQ,CAACG,SAAS,GAACA,SAAS,GAAE,CAAtB,CAAR;AACH;AACJ,GAJD;;AAKF,sBACE;AAAA,yBACWJ,KADX,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAIC,QAAQ,CAACF,YAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAIE,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAIC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBQJ,Y;;KAAAA,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction HookCounter1() {\r\n\r\n    const initialCount = 0\r\n    const [count,setCount]= useState(initialCount )\r\n\r\n    const incrementFive = ()=>{\r\n        for(let i=0;i<5;i++) {\r\n            setCount(prevCount=prevCount +1 )\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n        Count:{count}\r\n        <button onClick={()=>setCount(initialCount)}>Reset</button>\r\n        <button onClick={()=>setCount(count+1)}>increment</button>\r\n        <button onClick={()=>setCount(count-1)}>decrement</button>\r\n        <button onClick={incrementFive}>five</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HookCounter1"]},"metadata":{},"sourceType":"module"}